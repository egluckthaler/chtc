# HTCondor Submit File

# Required arguments:
# email            your email
# prefix           analysis prefix
# assembly2reads   4 col tsv: ref assembly fasta, sampleID, read1 fastq, read2 fastq
# threads          number of CPUs
# outdir           output directory
# 
# Usage: 
# condor_submit email=<str> prefix=<str> assembly2reads=<file> threads=<int> outdir=<path> bwa.sub 
# 
# Output:
# will output results to $outdir for each sampleID (must be located in /staging)
# 
# Recommendations:
# threads=4

# IMPORTANT! Require execute servers that can access /staging and /projects
Requirements = (Target.HasCHTCStaging == true) && (HasCHTCProjects == true)

# Resource requests
request_cpus = $(threads)
request_memory = 12GB
request_disk = 12GB

# Set notification options (options are Never, Complete, Error or Always)
notify_user   = $(email)
notification  = Error

# Name the batch job
batch_name = "$(prefix)_shortReadMapping" 

# Set universe to vanilla since this is a conda-based analysis
universe = vanilla

# Provide our executable and arguments
executable = bwa.sh
arguments = $(assembly) $(read1) $(read2) $(sampleID) $(threads) $(outdir)

# Track job information (required)
should_transfer_files = IF_NEEDED
when_to_transfer_output = ON_EXIT
transfer_output_files = ""

# Job files (uncomment if desired)
log = $(prefix)_$(sampleID)_shortReadMapping.log
output = $(prefix)_$(sampleID)_shortReadMapping.out
error = $(prefix)_$(sampleID)_shortReadMapping.err

# Tell HTCondor to run our job using variables from a file:
queue assembly,sampleID,read1,read2 from $(assembly2reads)
